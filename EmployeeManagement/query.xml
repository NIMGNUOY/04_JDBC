<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>

	<comment>query.xml file!!</comment>
	
	<entry key = "selectAll">
		SELECT EMP_ID, EMP_NAME, EMP_NO, EMAIL, PHONE, 
		NVL(DEPT_TITLE, '부서없음') AS DEPT_TITLE, JOB_NAME, SALARY
		FROM EMPLOYEE
		LEFT JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
		JOIN JOB USING (JOB_CODE)
		ORDER BY EMP_ID
	</entry>
	
	<entry key = "insertEmployee">
		INSERT INTO EMPLOYEE VALUES
		(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, SYSDATE, NULL, DEFAULT)
	</entry>
	
	<entry key = "selectOne">
		SELECT EMP_ID, EMP_NAME, EMP_NO, EMAIL, PHONE, NVL(DEPT_TITLE, '부서없음') AS DEPT_TITLE, JOB_NAME, SALARY
		FROM EMPLOYEE
		LEFT JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
		JOIN JOB USING (JOB_CODE)
		WHERE EMP_ID = ?
	</entry>
	
	<entry key = "updateEmployee">
		UPDATE EMPLOYEE SET EMAIL = ?, PHONE = ?, SALARY = ?
		WHERE EMP_ID = ?
	</entry>
	
	<entry key = "deleteEmployee">
		DELETE FROM EMPLOYEE WHERE EMP_ID = ?
	</entry>
	
	<entry key = "selectDeptEmp">
		SELECT EMP_ID, EMP_NAME, EMP_NO, EMAIL, PHONE, NVL(DEPT_TITLE, '부서없음') AS DEPT_TITLE, JOB_NAME, SALARY
		FROM EMPLOYEE
		LEFT JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
		JOIN JOB USING (JOB_CODE)
		WHERE DEPT_TITLE = ?
	</entry>
	
	<entry key = "selectSalaryEmp">
		SELECT EMP_ID, EMP_NAME, EMP_NO, EMAIL, PHONE, NVL(DEPT_TITLE, '부서없음') AS DEPT_TITLE, JOB_NAME, SALARY
		FROM EMPLOYEE
		LEFT JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
		JOIN JOB USING (JOB_CODE)
		WHERE SALARY >= ?
		ORDER BY SALARY DESC
	</entry>
	
	<entry key = "selectDeptTotalSalary">
		SELECT NVL(DEPT_TITLE, '소속없음') AS DEPT_TITLE, SUM(SALARY) AS SUM_SALARY
		FROM EMPLOYEE
		LEFT JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
		GROUP BY DEPT_TITLE
		ORDER BY SUM_SALARY DESC
	</entry>
	
	<entry key = "selectEmpNo">
		SELECT EMP_ID, EMP_NAME, EMP_NO, EMAIL, PHONE, NVL(DEPT_TITLE, '부서없음') AS DEPT_TITLE, JOB_NAME, SALARY
		FROM EMPLOYEE
		LEFT JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
		JOIN JOB USING (JOB_CODE)
		WHERE EMP_NO = ?
	</entry>
	
	<entry key = "selectJobAvgSalary">
		SELECT JOB_NAME, ROUND( AVG(SALARY),1 ) AS AVG_SALARY
		FROM EMPLOYEE
		JOIN JOB USING(JOB_CODE)
		GROUP BY JOB_NAME
		ORDER BY AVG_SALARY DESC
	</entry>
	
</properties>

















